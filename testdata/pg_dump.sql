--
-- PostgreSQL database dump
--

-- Dumped from database version 12.10 (Debian 12.10-1.pgdg100+1)
-- Dumped by pg_dump version 12.10 (Debian 12.10-1.pgdg100+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: example_schema; Type: SCHEMA; Schema: -; Owner: dbuser
--

CREATE SCHEMA example_schema;


ALTER SCHEMA example_schema OWNER TO dbuser;

--
-- Name: extensions; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA extensions;


ALTER SCHEMA extensions OWNER TO postgres;

--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA extensions;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: events; Type: TABLE; Schema: example_schema; Owner: dbuser
--

CREATE TABLE example_schema.events (
    id integer NOT NULL,
    flags text[],
    data jsonb
);


ALTER TABLE example_schema.events OWNER TO dbuser;

--
-- Name: events_id_seq; Type: SEQUENCE; Schema: example_schema; Owner: dbuser
--

ALTER TABLE example_schema.events ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME example_schema.events_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: fkexample; Type: TABLE; Schema: public; Owner: dbuser
--

CREATE TABLE public.fkexample (
    id integer NOT NULL,
    user_id integer NOT NULL,
    firstname_materialized text NOT NULL
);


ALTER TABLE public.fkexample OWNER TO dbuser;

--
-- Name: fkexample_id_seq; Type: SEQUENCE; Schema: public; Owner: dbuser
--

ALTER TABLE public.fkexample ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.fkexample_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users; Type: TABLE; Schema: public; Owner: dbuser
--

CREATE TABLE public.users (
    id integer NOT NULL,
    firstname text NOT NULL,
    lastname text NOT NULL,
    password text NOT NULL,
    uuid uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    notes text
);


ALTER TABLE public.users OWNER TO dbuser;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: dbuser
--

ALTER TABLE public.users ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: events; Type: TABLE DATA; Schema: example_schema; Owner: dbuser
--

COPY example_schema.events (id, flags, data) FROM stdin;
1	{flag1,flag2}	{"a": "b"}
2	{"flag1,a","flag2,b"}	{"a": "c,b", "b": [1, 0]}
3	{flag3}	{"c": null}
4	{"flag3\ttab"}	{"d": "x  y"}
\.


--
-- Data for Name: fkexample; Type: TABLE DATA; Schema: public; Owner: dbuser
--

COPY public.fkexample (id, user_id, firstname_materialized) FROM stdin;
1	1	ariadne
2	3	lucius
3	5	asterix
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: dbuser
--

COPY public.users (id, firstname, lastname, password, uuid, notes) FROM stdin;
1	ariadne	augustus	$2a$06$cc3fpt8tCpx/1BiO0wNwceUL6Q3eFqAfdIy/AVhXvho456JLjmAxq	13c80bc0-1033-409a-80c7-6e9812129ae3	\N
2	james	joyce	$2a$06$g8U3tny2dhrrFlp/odXPo.Ko8JiZwpKSFP5PgxTf4eEbatqvPlJRi	2c275469-3ac7-4a38-8a57-a73c3f943f9f	\N
3	lucius	langoustine	$2a$06$.d8FVKIVagQaHU.6ouHGKegL85H8.cFIvXDNGC/wb8dXAWt3fmukq	4e83c194-19ab-4222-af34-0692aab2d784	\N
4	biggles	barrymore	$2a$06$84fbobMgvJF1pUXOMDJoM.Z19EaI9RJTKVv/V7sWAa.3wlxFpdX4S	62a21d05-278d-4cb0-b556-d27c0c2841fe	a 'note'
5	asterix	a gaul	$2a$06$HX1jqYVW.gzZMR0uDgqlZ.kgi4aWrwmntq4dsRBZKhX/ltE7/L6yK	64b633bc-ae91-4536-ae5a-485ef5580c31	a "note", with commas, etc.
6	wormtail	wyckenhof	$2a$06$JlojKu35mH6HuBHDT09JrupIZufZl5hSgEZahE.i/XOlfTJyL.j9e	9bf41bc2-3d61-4f55-a4e7-44bf2a2c5720	a note with a tab here:"\t"
\.


--
-- Name: events_id_seq; Type: SEQUENCE SET; Schema: example_schema; Owner: dbuser
--

SELECT pg_catalog.setval('example_schema.events_id_seq', 4, true);


--
-- Name: fkexample_id_seq; Type: SEQUENCE SET; Schema: public; Owner: dbuser
--

SELECT pg_catalog.setval('public.fkexample_id_seq', 3, true);


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: dbuser
--

SELECT pg_catalog.setval('public.users_id_seq', 6, true);


--
-- Name: events events_pkey; Type: CONSTRAINT; Schema: example_schema; Owner: dbuser
--

ALTER TABLE ONLY example_schema.events
    ADD CONSTRAINT events_pkey PRIMARY KEY (id);


--
-- Name: users users_id_key; Type: CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_id_key UNIQUE (id);


--
-- Name: fkexample fkexample_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: dbuser
--

ALTER TABLE ONLY public.fkexample
    ADD CONSTRAINT fkexample_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: SCHEMA extensions; Type: ACL; Schema: -; Owner: postgres
--

GRANT USAGE ON SCHEMA extensions TO dbuser;


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
--

GRANT ALL ON SCHEMA public TO dbuser;


--
-- PostgreSQL database dump complete
--

